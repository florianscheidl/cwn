program: exp.run_mol_exp
command:
  - ${interpreter}
  - "-m"
  - ${program}
  - ${args} # args
  - "--use_edge_features"
  - "--dump_curves"
  # if we do regression, we additionally want "--minimize"

method: random
parameters:

  # Randomness
  seed:
    values: [0]
  # dataset:
  dataset_name:
    values: [ZINC, Qm9]
  task_type:
    value: regression
  eval_metric:
    value: mae # specified for ogb datasets, for others: accuracy. Could support additional metrics, e.g. ROC-AUC.

  # training
  batch_size:
    value: 32
  epochs:
    value: 1 # default: 200
  folds:
    value: 1 # default: 10
  train_eval_period:
    value: 10
  validation_technique:
    value: [ k_fold, random_splits ]

  # NN parameters
  nonlinearity:
    value: relu
  graph_norm:
    value: bn

  # GNN Specific params
  emb_dim:
    value: 64
  num_layers:
    value: 2
  readout:
    value: sum
  final_readout:
    value: sum

  # Model-specific GNN params:
  model:
    values: [cin, sparse_cin]
  use_coboundaries:
    value: False
  max_dim:
    value: 3
  max_ring_size:
    value: 3
  init_method:
    value: sum

  # Regularization
  drop_rate:
    value: 0.5

  # Optimizer
  lr:
    value: 0.001
  lr_scheduler:
    value: StepLR
  lr_scheduler_decay_steps:
    value: [30,60,90]
  lr_scheduler_decay_rate:
    value: 0.5
  lr_scheduler_patience:
    value: 10
  lr_scheduler_min_lr:
    value: 1e-5
